@inject Blazored.LocalStorage.ILocalStorageService localStorage
@page "/counter"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

@if(currentCount.HasValue)
{
    <h1>Counter</h1>

    <p role="status">Current count: @currentCount</p>

    <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
}
else
{
    <p><em>Loading...</em></p>
}
@code {
    private int? currentCount;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await Task.Delay(1000); // Only to simulate a delay

        // Get value for currentCount from local storage
        currentCount = await localStorage.GetItemAsync<int>("counter");

        // Notify Blazor that the state has changed
        StateHasChanged();
    }

    private async Task IncrementCount()
    {
        currentCount++;

        // Store the new value of currentCount in local storage
        await localStorage.SetItemAsync("counter", currentCount);
    }
}
